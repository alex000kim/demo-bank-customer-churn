name: Deploy to AWS Lambda
on: 
  push:
    tags:
      - '*#dev*'
      - '*#stage*' 
      - '*#prod*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Set Image Tag 
      id: imagetag  
      run: |
        REF=${GITHUB_REF#refs/tags/}
        REF=${REF//#/-}
        echo "::set-output name=tag::${REF}"       
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: demo-bank-customer-churn
        IMAGE_TAG: ${{ steps.imagetag.outputs.tag }} 
      run: |
        echo "IMAGE_TAG=$IMAGE_TAG"
        pip install dvc[s3]
        dvc pull models/clf-model.joblib
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Deploy to AWS Lambda
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  
        ECR_REPOSITORY: demo-bank-customer-churn
        IMAGE_TAG: ${{ steps.imagetag.outputs.tag }} 
      run: |  
        if [[ $IMAGE_TAG == *"-dev-"* ]]; then
          aws lambda update-function-code --function-name bank-customer-churn-dev --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          aws lambda get-function-url-config --function-name bank-customer-churn-dev
        elif [[ $IMAGE_TAG == *"-stage-"* ]]; then
          aws lambda update-function-code --function-name bank-customer-churn-stage --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
          aws lambda get-function-url-config --function-name bank-customer-churn-stage
        elif [[ $IMAGE_TAG == *"-prod-"* ]]; then
          aws lambda update-function-code --function-name bank-customer-churn-prod --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          aws lambda get-function-url-config --function-name bank-customer-churn-prod
        fi
